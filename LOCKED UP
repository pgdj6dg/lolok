local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

-- Player setup
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Ball system
local ball = nil
local ballHighlight = nil
local ballHitbox = nil
local hitboxSize = 1.5 -- Default size

-- ESP system
local espEnabled = false
local espBoxes = {}

-- Freecam system
local freecamEnabled = false
local originalCameraType = nil

-- Find the closest ball to player
local function findClosestBall()
    local closestBall = nil
    local closestDistance = math.huge
    local characterPos = character:GetPivot().Position

    -- Search all BaseParts that could be a ball
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("BasePart") and (obj.Name:lower():find("ball") or obj.Shape == Enum.PartType.Ball or obj:IsA("MeshPart")) then
            local distance = (obj.Position - characterPos).Magnitude
            if distance < closestDistance then
                closestBall = obj
                closestDistance = distance
            end
        end
    end

    return closestBall
end

-- Update ball hitbox visualization
local function updateHitbox()
    if ball and ballHitbox then
        ballHitbox.Size = ball.Size * hitboxSize
        ballHitbox.CFrame = ball.CFrame
    end
end

-- Create/update ball visuals
local function setupBallVisuals()
    if ballHighlight then ballHighlight:Destroy() end
    if ballHitbox then ballHitbox:Destroy() end

    if ball then
        -- Ball highlight
        ballHighlight = Instance.new("Highlight")
        ballHighlight.Name = "BallHighlight"
        ballHighlight.FillColor = Color3.fromRGB(0, 255, 0)
        ballHighlight.OutlineColor = Color3.fromRGB(0, 200, 0)
        ballHighlight.Parent = ball

        -- Hitbox visualization
        ballHitbox = Instance.new("Part")
        ballHitbox.Name = "HitboxVisualizer"
        ballHitbox.Shape = Enum.PartType.Block
        ballHitbox.Transparency = 0.7
        ballHitbox.Color = Color3.fromRGB(255, 0, 0)
        ballHitbox.Material = Enum.Material.Neon
        ballHitbox.Anchored = true
        ballHitbox.CanCollide = false
        ballHitbox.Parent = Workspace
        updateHitbox()

        -- Keep hitbox updated
        RunService.Heartbeat:Connect(updateHitbox)
    end
end

-- Player ESP functions
local function createESP(target)
    if not target:FindFirstChild("HumanoidRootPart") then return end

    local highlight = Instance.new("Highlight")
    highlight.Name = "ESP_Highlight"
    highlight.FillColor = Color3.fromRGB(255, 50, 50)
    highlight.OutlineColor = Color3.fromRGB(255, 100, 100)
    highlight.FillTransparency = 0.5
    highlight.Parent = target
    espBoxes[target] = highlight
end

local function removeESP(target)
    if espBoxes[target] then
        espBoxes[target]:Destroy()
        espBoxes[target] = nil
    end
end

local function toggleESP()
    espEnabled = not espEnabled
    
    if espEnabled then
        -- Add ESP to existing players
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer and player.Character then
                createESP(player.Character)
            end
        end
        
        -- Connect for new players
        Players.PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function(character)
                if espEnabled then
                    createESP(character)
                end
            end)
        end)
    else
        -- Remove all ESP
        for target, _ in pairs(espBoxes) do
            removeESP(target)
        end
    end
end

-- Freecam system using Roblox's controls
local function toggleFreecam()
    freecamEnabled = not freecamEnabled
    local camera = Workspace.CurrentCamera
    
    if freecamEnabled then
        -- Enable freecam
        originalCameraType = camera.CameraType
        camera.CameraType = Enum.CameraType.Scriptable
        
        -- Attach ball to camera
        if ball then
            ball.Anchored = true
            RunService.RenderStepped:Connect(function()
                if ball and camera then
                    ball.CFrame = camera.CFrame * CFrame.new(0, 0, -5)
                end
            end)
        end
        
        Rayfield:Notify({
            Title = "Freecam Enabled",
            Content = "Use normal movement controls\nBall will follow camera",
            Duration = 5
        })
    else
        -- Disable freecam
        camera.CameraType = originalCameraType or Enum.CameraType.Custom
        
        -- Release ball
        if ball then
            ball.Anchored = false
        end
        
        Rayfield:Notify({
            Title = "Freecam Disabled",
            Content = "Returned to normal view",
            Duration = 3
        })
    end
end

-- Working moves
local function directShot()
    if not ball then ball = findClosestBall() end
    if ball then
        ball.Velocity = Workspace.CurrentCamera.CFrame.LookVector * 150
    end
end

local function curveShot()
    if not ball then ball = findClosestBall() end
    if ball then
        local direction = Workspace.CurrentCamera.CFrame.LookVector
        direction = direction + Vector3.new(0, 0.3, 0) -- Add curve
        ball.Velocity = direction * 120
    end
end

local function powerDribble()
    if not ball then ball = findClosestBall() end
    if ball then
        local spin = Instance.new("BodyAngularVelocity")
        spin.AngularVelocity = Vector3.new(0, 15, 0)
        spin.MaxTorque = Vector3.new(2000, 2000, 2000)
        spin.Parent = ball
        game.Debris:AddItem(spin, 3)
    end
end

-- Create UI
local Window = Rayfield:CreateWindow({
    Name = "BLUE LOCK ULTIMATE",
    LoadingTitle = "Loading Enhanced Features...",
    LoadingSubtitle = "Fixed ESP + Freecam",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "BlueLockFixed",
        FileName = "Settings"
    }
})

-- Main Tab
local MainTab = Window:CreateTab("Main")
MainTab:CreateSection("Core Controls")

MainTab:CreateButton({
    Name = "Find Closest Ball",
    Callback = function()
        ball = findClosestBall()
        if ball then
            setupBallVisuals()
            Rayfield:Notify({
                Title = "Ball Found",
                Content = "Closest ball highlighted",
                Duration = 3
            })
        else
            Rayfield:Notify({
                Title = "No Ball Found",
                Content = "Couldn't locate any ball",
                Duration = 3
            })
        end
    end
})

MainTab:CreateToggle({
    Name = "Player ESP",
    CurrentValue = false,
    Callback = toggleESP
})

MainTab:CreateToggle({
    Name = "Freecam Mode",
    CurrentValue = false,
    Callback = toggleFreecam
})

MainTab:CreateSlider({
    Name = "Hitbox Size",
    Range = {0.5, 3},
    Increment = 0.1,
    CurrentValue = hitboxSize,
    Callback = function(value)
        hitboxSize = value
        updateHitbox()
    end
})

-- Moves Tab
local MovesTab = Window:CreateTab("Moves")
MovesTab:CreateSection("Working Techniques")

MovesTab:CreateButton({
    Name = "DIRECT SHOT (Q)",
    Callback = directShot
})

MovesTab:CreateButton({
    Name = "CURVE SHOT (E)",
    Callback = curveShot
})

MovesTab:CreateButton({
    Name = "POWER DRIBBLE (R)",
    Callback = powerDribble
})

-- Keybinds
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.Q then
        directShot()
    elseif input.KeyCode == Enum.KeyCode.E then
        curveShot()
    elseif input.KeyCode == Enum.KeyCode.R then
        powerDribble()
    end
end)

-- Auto setup
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    humanoid = character:WaitForChild("Humanoid")
    if espEnabled then toggleESP() end -- Refresh ESP
    ball = findClosestBall()
    setupBallVisuals()
end)

-- Initial setup
ball = findClosestBall()
setupBallVisuals()
